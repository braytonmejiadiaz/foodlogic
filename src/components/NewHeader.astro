---
import Logo from "./icons/Logo.astro"

const navItems = [
  {
    title: "Inicio",
    label: "inicio",
    url: "/#inicio",
  },
  {
    title: "Sobre nosotros",
    label: "sobre-nosotros",
    url: "/#sobre-nosotros",
  },
  {
    title: "Nuestros planes",
    label: "nuestros-planes",
    url: "/#nuestros-planes",
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "mailto:braytonmejiadiaz@gmail.com",
  },
]
---

<header
  class="fixed top-0 z-10 flex items-center justify-center w-full  mx-auto mt-2"
>

  <nav
    class="flex items-center justify-between mx-auto w-[1240px] px-3 text-lg font-medium rounded-full text-black/80 dark:text-gray-200"
  >
    <div>
      <a href="#inicio">
        <Logo ></Logo>
      </a>
    </div>  

    {
      navItems.map((link) => (
      
        <a
          class=" py-2 transition hover:text-[#FF5023] dark:hover:text-blue-500"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
  
      ))
      
    }
    <div>
        <button class="bg-orange-300 p-2 rounded-xl text-white font-normal 
        hover:scale-105 transition-all hover:shadow-md hover:bg-[#F16920]">
            Ingresar
        </button>
        <button class="bg-orange-300 p-2 rounded-xl text-white font-normal
        hover:scale-105 transition-all hover:shadow-md hover:bg-[#F16920]">
            crear cuenta
        </button>
    </div>
  </nav>
  
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-blue-500")
            } else {
              item.classList.remove("text-blue-500")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  nav {
    @apply dark:bg-gray-800/90 bg-white/50;
  }

  @keyframes nav-shadown {
    0% {
      @apply dark:bg-gray-800/0 bg-white/0;
    }
    to {
      @apply shadow-lg ring-1 backdrop-blur ring-white/10;
    }
  }
</style>